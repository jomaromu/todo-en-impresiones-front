{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport { catchError, map, mergeMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\nimport * as loginActions from '../reducers/login/login.actions';\nimport * as ayudasActions from '../reducers/ayuda/ayuda.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/user.service\";\nimport * as i3 from \"../services/ayuda.service\";\nimport * as i4 from \"../services/pedido.service\";\nexport let UserEffects = /*#__PURE__*/(() => {\n  class UserEffects {\n    constructor(actions$, userService, ayudaService, pedidoService) {\n      this.actions$ = actions$;\n      this.userService = userService;\n      this.ayudaService = ayudaService;\n      this.pedidoService = pedidoService;\n      this.decodificarToken$ = createEffect(() => {\n        return this.actions$.pipe(ofType(loginActions.obtenerToken), mergeMap(action => this.userService.decodificarToken(action.token).pipe(map(tokenDecoded => loginActions.cargarWorker({\n          worker: tokenDecoded\n        })))));\n      });\n      this.refrescarToken$ = createEffect(() => {\n        return this.actions$.pipe(ofType(loginActions.obtenerIdUsuario), mergeMap(respToken => this.userService.refrescarToken(respToken.usuario.usuario._id).pipe(map(usuario => loginActions.refrescarToken({\n          usuario\n        })), // tap(data => console.log(data)),\n        catchError(err => of(loginActions.lognError())))));\n      });\n      this.cargarAyudas$ = createEffect(() => {\n        return this.actions$.pipe(ofType(loginActions.obtenerToken), mergeMap(respToken => this.ayudaService.obtenerAyudas(respToken.token).pipe( // tap(data => console.log(data)),\n        map(ayudas => ayudasActions.cargarAyudas({\n          ayudas: ayudas.ayudasDB\n        })))));\n      });\n    }\n\n  }\n\n  UserEffects.ɵfac = function UserEffects_Factory(t) {\n    return new (t || UserEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.UserService), i0.ɵɵinject(i3.AyudaService), i0.ɵɵinject(i4.PedidoService));\n  };\n\n  UserEffects.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserEffects,\n    factory: UserEffects.ɵfac\n  });\n  return UserEffects;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PedidoService = /*#__PURE__*/(() => {\n  class PedidoService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    crearPedido(data) {\n      const url = `${environment.url}/pedidos/crearPedido`;\n      const header = new HttpHeaders({\n        token: data.token,\n        cliente: data.cliente,\n        sucursal: data.sucursal,\n        vendedor: data.vendedor\n      });\n      return this.http.post(url, data, {\n        headers: header\n      }).pipe(map(resp => {\n        return resp;\n      }));\n    }\n\n    editarPedido(data, token) {\n      const url = `${environment.url}/pedidos/editarPedido`;\n      const header = new HttpHeaders({\n        token,\n        id: data.id\n      });\n      return this.http.put(url, data, {\n        headers: header\n      }).pipe(map(pedido => pedido));\n    }\n\n    obtenerPedidos(token) {\n      const url = `${environment.url}/pedidos/obtenerTodos`;\n      const header = new HttpHeaders({\n        token\n      });\n      return this.http.get(url, {\n        headers: header\n      }).pipe(map(resp => {\n        return resp;\n      }));\n    }\n\n    obtenerPedido(data) {\n      const url = `${environment.url}/pedidos/obtenerPedidoID`;\n      const header = new HttpHeaders({\n        token: data.token,\n        id: data.idPedido\n      });\n      return this.http.get(url, {\n        headers: header\n      }).pipe(map(resp => {\n        return resp;\n      }));\n    }\n\n    busquedaBandejas(data) {\n      const url = `${environment.url}/pedidos/busquedaBandeja`; // tslint:disable-next-line: max-line-length\n\n      const header = new HttpHeaders({\n        token: data.token,\n        colRole: data.colRole,\n        sucursal: data.sucursal,\n        userID: data.userID,\n        bandejas: data.bandejas\n      });\n      return this.http.get(url, {\n        headers: header\n      }).pipe(map(resp => {\n        return resp;\n      }));\n    }\n\n    obtenerPedidosCriterio(data) {\n      const url = `${environment.url}/pedidos/obtenerPedidosCriterio`;\n      const header = new HttpHeaders({\n        token: data.token,\n        criterio: data.criterio\n      });\n      return this.http.get(url, {\n        headers: header\n      }).pipe(map(resp => resp));\n    }\n\n  }\n\n  PedidoService.ɵfac = function PedidoService_Factory(t) {\n    return new (t || PedidoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  PedidoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PedidoService,\n    factory: PedidoService.ɵfac,\n    providedIn: 'root'\n  });\n  return PedidoService;\n})();","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { Observable } from 'rxjs';\nimport { io } from 'socket.io-client';\nimport { environment } from '../../../environments/environment';\nimport * as i0 from \"@angular/core\";\nexport let WebsocketsService = /*#__PURE__*/(() => {\n  class WebsocketsService {\n    constructor() {\n      this.socketStatus = false;\n      this.socket = io(environment.url);\n      this.checkStatus();\n    }\n\n    checkStatus() {\n      // escuchar el servidor\n      this.socket.on('connect', () => {\n        console.log('Conectado al servidor');\n        this.socketStatus = true;\n      });\n      this.socket.on('disconnect', () => {\n        console.log('Desconectado del servidor');\n        this.socketStatus = false;\n      });\n    } // Emitir eventos\n\n\n    emitir(evento, payload, callback) {\n      this.socket.emit(evento, payload, callback);\n    } // Escuchar eventos\n\n\n    escuchar(evento) {\n      return new Observable(subscriber => {\n        this.socket.on(evento, callback => {\n          subscriber.next(callback);\n        });\n      });\n    }\n\n  }\n\n  WebsocketsService.ɵfac = function WebsocketsService_Factory(t) {\n    return new (t || WebsocketsService)();\n  };\n\n  WebsocketsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: WebsocketsService,\n    factory: WebsocketsService.ɵfac,\n    providedIn: 'root'\n  });\n  return WebsocketsService;\n})();","map":null,"metadata":{},"sourceType":"module"}
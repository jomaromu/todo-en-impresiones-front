{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let MetodoPagoService = /*#__PURE__*/(() => {\n  class MetodoPagoService {\n    constructor(http) {\n      this.http = http;\n    }\n\n    obtenerMetodos(token) {\n      const url = `${environment.url}/metodoPago/obtenerTododsMetodos`;\n      const header = new HttpHeaders({\n        token\n      });\n      return this.http.get(url, {\n        headers: header\n      }).pipe(map(resp => {\n        return resp;\n      }));\n    }\n\n    crearMetodo(data) {\n      const url = `${environment.url}/metodoPago/crearMetodo`;\n      const header = new HttpHeaders({\n        token: data.token\n      });\n      return this.http.post(url, data, {\n        headers: header\n      }).pipe(map(resp => {\n        return resp;\n      }));\n    }\n\n    obtenerMetodoID(id, token) {\n      const url = `${environment.url}/metodoPago/obtenerMetodoID`;\n      const header = new HttpHeaders({\n        id,\n        token\n      });\n      return this.http.get(url, {\n        headers: header\n      }).pipe(map(resp => resp));\n    }\n\n    editarMetodoID(id, data) {\n      const url = `${environment.url}/metodoPago/editarMetodo`;\n      const header = new HttpHeaders({\n        id,\n        token: data.token\n      });\n      return this.http.put(url, data, {\n        headers: header\n      }).pipe(map(resp => resp));\n    }\n\n    eliminarMetodoID(id, token) {\n      const url = `${environment.url}/metodoPago/eliminarMetodoID`;\n      const header = new HttpHeaders({\n        id,\n        token\n      });\n      return this.http.delete(url, {\n        headers: header\n      }).pipe(map(resp => resp));\n    }\n\n  }\n\n  MetodoPagoService.ɵfac = function MetodoPagoService_Factory(t) {\n    return new (t || MetodoPagoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  MetodoPagoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MetodoPagoService,\n    factory: MetodoPagoService.ɵfac,\n    providedIn: 'root'\n  });\n  return MetodoPagoService;\n})();","map":null,"metadata":{},"sourceType":"module"}
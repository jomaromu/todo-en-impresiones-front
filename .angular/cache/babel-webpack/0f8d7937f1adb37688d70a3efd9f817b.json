{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { formatDate } from '@angular/common';\nimport * as moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { isWeekDay } from 'moment-business';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/sucursal.service\";\nimport * as i3 from \"../../services/user.service\";\nimport * as i4 from \"../../services/pedido.service\";\nimport * as i5 from \"@ngrx/store\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nconst _c0 = [\"placeHolderCliente\"];\nconst _c1 = [\"placeHolderClienteCel\"];\nconst _c2 = [\"wrapCreaciones\"];\nconst _c3 = [\"nombre\"];\nconst _c4 = [\"cliente\"];\n\nfunction PedidosComponent_a_18_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 25);\n    i0.ɵɵlistener(\"click\", function PedidosComponent_a_18_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const cliente_r7 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.detectarCliente(cliente_r7);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cliente_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cliente_r7.nombre);\n  }\n}\n\nfunction PedidosComponent_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 26);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sucursal_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sucursal_r10._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", sucursal_r10 == null ? null : sucursal_r10.nombre, \"\");\n  }\n}\n\nfunction PedidosComponent_a_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"a\", 25);\n    i0.ɵɵlistener(\"click\", function PedidosComponent_a_30_Template_a_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r13);\n      const cliente_r11 = restoredCtx.$implicit;\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.detectarCliente(cliente_r11);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const cliente_r11 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(cliente_r11.nombre);\n  }\n}\n\nconst _c5 = function (a0) {\n  return {\n    \"borde-rojo\": a0\n  };\n};\n\nmoment.locale('en');\nexport let PedidosComponent = /*#__PURE__*/(() => {\n  class PedidosComponent {\n    constructor(fb, sucursalService, userService, pedidoService, store, router) {\n      this.fb = fb;\n      this.sucursalService = sucursalService;\n      this.userService = userService;\n      this.pedidoService = pedidoService;\n      this.store = store;\n      this.router = router;\n      this.weekdDay = 0;\n      this.contadorDias = 0;\n    }\n\n    ngOnInit() {\n      this.cargarFechaEntrega();\n      this.crearFormulario();\n      this.cargarSelects();\n      this.ocultarPlaceHolders();\n    }\n\n    crearFormulario() {\n      this.forma = this.fb.group({\n        nombre: [null, [Validators.required]],\n        sucursal: [null, [Validators.required]],\n        telefono: [null, [Validators.required]],\n        fecha: [formatDate(this.fecha, 'yyyy-MM-dd', 'en'), [Validators.required]]\n      });\n    }\n\n    get checkNombre() {\n      if (this.forma.controls.nombre.touched && this.forma.controls.nombre.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkSucursal() {\n      if (this.forma.controls.sucursal.touched && this.forma.controls.sucursal.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkTelefono() {\n      if (this.forma.controls.telefono.touched && this.forma.controls.telefono.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkFecha() {\n      if (this.forma.controls.fecha.touched && this.forma.controls.fecha.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    cargarSelects() {\n      this.store.select('login').subscribe(usuario => {\n        const sucursalesDB = this.sucursalService.obtenerSucursales(usuario.token);\n        sucursalesDB.subscribe(sucursales => {\n          var _a, _b;\n\n          this.sucursales = sucursales;\n          this.forma.controls.sucursal.setValue((_b = (_a = usuario.usuario) === null || _a === void 0 ? void 0 : _a.sucursal) === null || _b === void 0 ? void 0 : _b._id);\n        });\n      });\n    }\n\n    cargarFechaEntrega() {\n      this.isWeekDay = isWeekDay(moment().add(1, 'days'));\n\n      while (this.weekdDay !== 3) {\n        if (this.isWeekDay) {\n          this.weekdDay++;\n          this.contadorDias++;\n          this.isWeekDay = isWeekDay(moment().add(this.contadorDias + 1, 'days'));\n        } else {\n          this.weekdDay += 0;\n          this.contadorDias++;\n          this.isWeekDay = isWeekDay(moment().add(this.contadorDias + 1, 'days'));\n        }\n      }\n\n      this.fecha = moment().add(this.contadorDias, 'days').format('YYYY-MM-DD');\n    }\n\n    fechaEntregaManual(e) {\n      const fecha = document.getElementById('fecha');\n      this.fecha = fecha.value;\n    }\n\n    buscarClienteNombre(e) {\n      this.idCliente = null;\n      const placeHolderCliente = this.placeHolderCliente.nativeElement;\n      const nombre = this.nombre.nativeElement;\n      let objCliente = {};\n\n      if (this.forma.controls.nombre.status === 'INVALID') {\n        placeHolderCliente.style.display = 'none';\n      }\n\n      if (this.forma.controls.nombre.status === 'VALID') {\n        // placeHolderCliente.style.display = 'block';\n        this.store.select('login').pipe(first()).subscribe(worker => {\n          const data = {\n            token: worker.token,\n            criterioNombre: this.forma.controls.nombre.value\n          };\n          this.userService.obtenerClienteCriterioNombre(data).subscribe(clientes => {\n            var _a;\n\n            if (clientes.ok === true && clientes.usuariosDB.length !== 0) {\n              placeHolderCliente.style.display = 'block';\n              const mapClientes = clientes.usuariosDB.map(cliente => {\n                if (cliente.client_role === 'EmpresaRole' || cliente.client_role === 'EmpresaVIPRole') {\n                  objCliente = {\n                    nombre: cliente.nombre,\n                    telefono: cliente.telefono,\n                    sucursal: cliente.sucursal,\n                    idCliente: cliente._id\n                  };\n                } else {\n                  objCliente = {\n                    nombre: `${cliente.nombre} ${cliente.apellido}`,\n                    telefono: cliente.telefono,\n                    sucursal: cliente.sucursal,\n                    idCliente: cliente._id\n                  };\n                }\n\n                return objCliente;\n              }); // console.log(mapClientes);\n\n              this.clientes = mapClientes; // const placeHolderCliente = this.placeHolderCliente.nativeElement;\n\n              if (((_a = this.clientes) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n                placeHolderCliente.style.display = 'none';\n              }\n            }\n          });\n        });\n      } // console.log(this.forma.controls.nombre.value);\n\n    }\n\n    buscarClienteTelefono(e) {\n      this.idCliente = null;\n      const placeHolderClienteCel = this.placeHolderClienteCel.nativeElement;\n      const nombre = this.nombre.nativeElement;\n      let objCliente = {};\n\n      if (this.forma.controls.telefono.status === 'INVALID') {\n        placeHolderClienteCel.style.display = 'none';\n      }\n\n      if (this.forma.controls.telefono.status === 'VALID') {\n        // placeHolderClienteCel.style.display = 'block';\n        this.store.select('login').pipe(first()).subscribe(worker => {\n          const data = {\n            token: worker.token,\n            telefono: this.forma.controls.telefono.value\n          };\n          this.userService.obtenerClienteCriterioTelefono(data).subscribe(clientes => {\n            var _a;\n\n            if (clientes.ok === true && clientes.usuariosDB.length !== 0) {\n              placeHolderClienteCel.style.display = 'block';\n              const mapClientes = clientes.usuariosDB.map(cliente => {\n                if (cliente.client_role === 'EmpresaRole' || cliente.client_role === 'EmpresaVIPRole') {\n                  objCliente = {\n                    nombre: cliente.nombre,\n                    telefono: cliente.telefono,\n                    sucursal: cliente.sucursal,\n                    idCliente: cliente._id\n                  };\n                } else {\n                  objCliente = {\n                    nombre: `${cliente.nombre} ${cliente.apellido}`,\n                    telefono: cliente.telefono,\n                    sucursal: cliente.sucursal,\n                    idCliente: cliente._id\n                  };\n                }\n\n                return objCliente;\n              }); // console.log(mapClientes);\n\n              this.clientes = mapClientes; // const placeHolderClienteCel = this.placeHolderClienteCel.nativeElement;\n\n              if (((_a = this.clientes) === null || _a === void 0 ? void 0 : _a.length) === 0) {\n                placeHolderClienteCel.style.display = 'none';\n              }\n            }\n          });\n        });\n      } // console.log(this.forma.controls.nombre.value);\n\n    }\n\n    detectarCliente(e) {\n      this.idCliente = e.idCliente;\n      const placeHolderCliente = this.placeHolderCliente.nativeElement;\n      const placeHolderClienteCel = this.placeHolderClienteCel.nativeElement;\n      this.forma.controls.nombre.setValue(e.nombre);\n      this.forma.controls.telefono.setValue(e.telefono); // this.forma.controls.sucursal.setValue(e.sucursal._id);\n\n      placeHolderCliente.style.display = 'none';\n      placeHolderClienteCel.style.display = 'none';\n    }\n\n    ocultarPlaceHolders() {\n      const wrapCreaciones = this.wrapCreaciones.nativeElement;\n      const placeHolderCliente = this.placeHolderCliente.nativeElement;\n      const placeHolderClienteCel = this.placeHolderClienteCel.nativeElement;\n      wrapCreaciones.addEventListener('click', () => {\n        placeHolderCliente.style.display = 'none';\n        placeHolderClienteCel.style.display = 'none';\n      });\n    }\n\n    limpiarForma() {\n      this.forma.reset();\n    }\n\n    guardar() {\n      this.forma.markAllAsTouched();\n\n      if (this.forma.status === 'INVALID') {\n        return;\n      }\n\n      if (this.forma.status === 'VALID') {\n        if (this.idCliente === null) {\n          Swal.fire('Mensaje', `Cliente no existe en la base de datos`, 'error');\n          return;\n        }\n\n        this.store.select('login').pipe(first()).subscribe(worker => {\n          this.userService.obtenerClienteID(this.idCliente, worker.token).subscribe(client => {\n            if (client.ok === false) {\n              Swal.fire('Mensaje', `${client.mensaje}`, 'error');\n            } else {\n              const data = {\n                cliente: this.idCliente,\n                sucursal: this.forma.controls.sucursal.value,\n                fecha_entrega: this.forma.controls.fecha.value,\n                token: worker.token,\n                vendedor: worker.usuario._id\n              }; // console.log(data);\n\n              this.pedidoService.crearPedido(data).subscribe(pedido => {\n                if (pedido.ok === false) {\n                  Swal.fire('Mensaje', `${pedido.mensaje}`, 'error');\n                } else if (pedido.ok === true) {\n                  // console.log(pedido);\n                  Swal.fire({\n                    title: 'Mensaje',\n                    text: 'Pedido creado, continuar editando el pedido',\n                    icon: 'info',\n                    showCancelButton: true,\n                    confirmButtonColor: '#3085d6',\n                    cancelButtonColor: '#d33',\n                    confirmButtonText: 'Ir al pedido',\n                    cancelButtonText: 'Nuevo pedido'\n                  }).then(result => {\n                    if (result.isConfirmed) {\n                      this.router.navigate(['dashboard/pedido'], {\n                        queryParams: {\n                          id: pedido.pedidoDB._id\n                        }\n                      });\n                    } else {\n                      this.forma.reset();\n                    }\n                  });\n                }\n              });\n            }\n          });\n        });\n      }\n    }\n\n  }\n\n  PedidosComponent.ɵfac = function PedidosComponent_Factory(t) {\n    return new (t || PedidosComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SucursalService), i0.ɵɵdirectiveInject(i3.UserService), i0.ɵɵdirectiveInject(i4.PedidoService), i0.ɵɵdirectiveInject(i5.Store), i0.ɵɵdirectiveInject(i6.Router));\n  };\n\n  PedidosComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PedidosComponent,\n    selectors: [[\"app-pedidos\"]],\n    viewQuery: function PedidosComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n        i0.ɵɵviewQuery(_c2, 7);\n        i0.ɵɵviewQuery(_c3, 7);\n        i0.ɵɵviewQuery(_c4, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.placeHolderCliente = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.placeHolderClienteCel = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapCreaciones = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.nombre = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.cliente = _t.first);\n      }\n    },\n    decls: 42,\n    vars: 19,\n    consts: [[\"id\", \"wrapper\"], [\"id\", \"wrap-craeciones\", 1, \"animate__animated\"], [\"wrapCreaciones\", \"\"], [\"id\", \"wrap-head\"], [\"id\", \"head-titulo\"], [1, \"fas\", \"fa-user-plus\", 2, \"margin-right\", \"30px\"], [\"id\", \"wrap-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"body\"], [1, \"ctrl-creacion\"], [1, \"col-sm-2\", \"col-form-label\"], [\"type\", \"search\", \"formControlName\", \"nombre\", 1, \"form-control\", 3, \"ngClass\", \"keyup\"], [\"nombre\", \"\"], [\"id\", \"placeHolderCliente\"], [\"placeHolderCliente\", \"\"], [\"role\", \"button\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"sucursal\", 1, \"form-select\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"search\", \"formControlName\", \"telefono\", 1, \"form-control\", 3, \"ngClass\", \"keyup\"], [\"placeHolderClienteCel\", \"\"], [\"type\", \"date\", \"id\", \"fecha\", \"formControlName\", \"fecha\", 1, \"form-control\", 3, \"value\", \"ngClass\", \"change\"], [\"role\", \"button\", \"routerLink\", \"/dashboard/clientes\", 1, \"fas\", \"fa-user-plus\", 2, \"text-align\", \"right\", \"width\", \"100%\", \"font-size\", \"20px\", \"color\", \"rgb(0, 83, 94)\"], [\"id\", \"wrap-buttons-creacion\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\"], [\"role\", \"button\", 3, \"click\"], [3, \"value\"]],\n    template: function PedidosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1, 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelement(5, \"i\", 5);\n        i0.ɵɵelementStart(6, \"span\");\n        i0.ɵɵtext(7, \"Nuevo Pedido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"form\", 7);\n        i0.ɵɵlistener(\"ngSubmit\", function PedidosComponent_Template_form_ngSubmit_9_listener() {\n          return ctx.guardar();\n        });\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"label\", 10);\n        i0.ɵɵtext(13, \"Cliente:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"input\", 11, 12);\n        i0.ɵɵlistener(\"keyup\", function PedidosComponent_Template_input_keyup_14_listener($event) {\n          return ctx.buscarClienteNombre($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13, 14);\n        i0.ɵɵtemplate(18, PedidosComponent_a_18_Template, 2, 1, \"a\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 9);\n        i0.ɵɵelementStart(20, \"label\", 10);\n        i0.ɵɵtext(21, \"Sucursal:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"select\", 16);\n        i0.ɵɵtemplate(23, PedidosComponent_option_23_Template, 2, 2, \"option\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 9);\n        i0.ɵɵelementStart(25, \"label\", 10);\n        i0.ɵɵtext(26, \"Tel\\u00E9fono:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 18);\n        i0.ɵɵlistener(\"keyup\", function PedidosComponent_Template_input_keyup_27_listener($event) {\n          return ctx.buscarClienteTelefono($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 13, 19);\n        i0.ɵɵtemplate(30, PedidosComponent_a_30_Template, 2, 1, \"a\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 9);\n        i0.ɵɵelementStart(32, \"label\", 10);\n        i0.ɵɵtext(33, \"F. Entrega:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"input\", 20);\n        i0.ɵɵlistener(\"change\", function PedidosComponent_Template_input_change_34_listener($event) {\n          return ctx.fechaEntregaManual($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 9);\n        i0.ɵɵelement(36, \"i\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 22);\n        i0.ɵɵelementStart(38, \"button\", 23);\n        i0.ɵɵtext(39, \"Crear pedido\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"button\", 24);\n        i0.ɵɵlistener(\"click\", function PedidosComponent_Template_button_click_40_listener() {\n          return ctx.limpiarForma();\n        });\n        i0.ɵɵtext(41, \"Limpiar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.forma);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c5, ctx.checkNombre));\n        i0.ɵɵattribute(\"data-idCliente\", ctx.idCliente);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c5, ctx.checkSucursal));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sucursales == null ? null : ctx.sucursales.sucursalesDB);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c5, ctx.checkTelefono));\n        i0.ɵɵattribute(\"data-idCliente\", ctx.idCliente);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.clientes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"value\", ctx.fecha)(\"ngClass\", i0.ɵɵpureFunction1(17, _c5, ctx.checkFecha));\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i7.NgClass, i7.NgForOf, i1.SelectControlValueAccessor, i6.RouterLink, i1.NgSelectOption, i1.ɵNgSelectMultipleOption],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Roboto&display=swap\\\";@import\\\"https://fonts.googleapis.com/css2?family=Nunito+Sans&display=swap\\\";html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%!important;background-color:#eff2f5!important;position:relative;overflow:auto}a[_ngcontent-%COMP%]{text-decoration:none}#wrapper[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-family:\\\"Nunito Sans\\\",sans-serif;margin-top:150px;width:calc(100% - 200px);height:100%}.borde-rojo[_ngcontent-%COMP%]{border:1px solid tomato}#wrap-craeciones[_ngcontent-%COMP%]{width:700px;min-height:400px;background-color:#fff;padding:25px;box-shadow:1px 1px 4px 1px #cfcfcf;position:relative}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-head[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:center}#wrap-craeciones[_ngcontent-%COMP%]   #head-titulo[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-family:\\\"Nunito Sans\\\",sans-serif;flex-direction:row;color:#006c60;text-shadow:1px 3px 3px #cecece;font-size:20px;font-weight:600}#wrap-craeciones[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-family:\\\"Nunito Sans\\\",sans-serif;flex-direction:row;outline:none;border:none;background-color:#00b19d;color:#e5e5e5;height:35px;padding:10px;border-radius:4px;box-shadow:1px 1px 3px 3px #cecece;transition:.3s all ease-in-out;font-size:14px}#wrap-craeciones[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#009f8d}#wrap-craeciones[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:7px;text-shadow:1px 3px 3px #cecece}#wrap-craeciones[_ngcontent-%COMP%]   .fa-plus[_ngcontent-%COMP%]{text-shadow:1px 1px 3px #a0a0a0}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]{display:grid;grid-template-columns:48% 48%;grid-row-gap:15px;margin-top:50px;width:100%;justify-content:space-between}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]   .ctrl-creacion[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:row;justify-content:space-between;align-items:flex-start}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]   .ctrl-creacion[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{outline:none;box-shadow:none;border-radius:0;border-top:0;border-left:0;border-right:0}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]   .ctrl-creacion[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{width:80px;margin-right:15px}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-buttons-creacion[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:140px;box-shadow:none;border:1px solid #cccccc}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-buttons-creacion[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-child{background-color:#fff;color:#00b19d}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-buttons-creacion[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-child:hover{color:#004b43;font-weight:400}#wrap-buttons-creacion[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;width:320px;position:absolute;right:25px;bottom:50px}#placeHolderCliente[_ngcontent-%COMP%]{display:none;background-color:#fff;position:absolute;width:calc(100% - 80px);top:38px;left:80px;z-index:99;border-bottom:1px solid #e5e5e5;border-left:none;border-top:none;border-right:none;padding:10px 0;max-height:170px;overflow-y:scroll}#placeHolderCliente[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;margin-bottom:5px;padding:5px}#placeHolderCliente[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover{background-color:#e5e5e5}\"]\n  });\n  return PedidosComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}
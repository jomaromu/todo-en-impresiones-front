{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { first, map } from 'rxjs/operators';\nimport Swal from 'sweetalert2';\nimport * as loadingActions from '../../reducers/loading/loading.actions';\nimport { forkJoin } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/store\";\nimport * as i2 from \"../../services/user.service\";\nimport * as i3 from \"../../services/sucursal.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"../../shared/busqueda/busqueda.component\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"../../shared/tables-catalogos/tables-catalogos.component\";\nimport * as i8 from \"../../shared/loading/loading.component\";\nconst _c0 = [\"fondo\"];\nconst _c1 = [\"wrapCreaciones\"];\n\nfunction ClientesComponent_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const sucursal_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", sucursal_r8._id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", sucursal_r8 == null ? null : sucursal_r8.nombre, \"\");\n  }\n}\n\nfunction ClientesComponent_option_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const role_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", role_r9.nombre);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(role_r9 == null ? null : role_r9.nombre);\n  }\n}\n\nfunction ClientesComponent_div_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 34);\n    i0.ɵɵelementStart(1, \"label\", 35);\n    i0.ɵɵtext(2, \"Estado:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 36);\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c2 = function (a0) {\n  return {\n    \"borde-rojo\": a0\n  };\n};\n\nexport let ClientesComponent = /*#__PURE__*/(() => {\n  class ClientesComponent {\n    constructor(store, userService, sucursalService, fb) {\n      this.store = store;\n      this.userService = userService;\n      this.sucursalService = sucursalService;\n      this.fb = fb;\n      this.crear = true;\n      this.tituloBotonHeader = '';\n      this.roleUsuario = '';\n    }\n\n    ngOnInit() {\n      this.obtenerUsuarios();\n      this.crearFormulario();\n    }\n\n    ngAfterContentChecked() {\n      var _a;\n\n      this.catalogo = {\n        tipo: 'clientes',\n        iconoTituloHeader: 'fas fa-user-lock',\n        tituloHeader: 'Información Clientes',\n        tituloBotonHeader: 'Crear Cliente',\n        iconoBotonHeader: 'fas fa-plus',\n        tituloTabla: ['#', 'Nombre', 'Teléfono', 'Correo', 'Estado', 'Controles'],\n        tablas: (_a = this.usuarios) === null || _a === void 0 ? void 0 : _a.usuariosDB\n      };\n    }\n\n    obtenerUsuarios() {\n      this.store.select('login').pipe(first()).subscribe(worker => {\n        this.userService.obtenerClientes(worker.token).subscribe(usuarios => {\n          // console.log(usuarios);\n          if (usuarios.ok === false) {\n            console.log('error');\n          } else {\n            this.usuarios = usuarios;\n          }\n        });\n      });\n    }\n\n    abrirAlert(objCat) {\n      const fondo = this.fondo.nativeElement;\n      const wrapCreaciones = this.wrapCreaciones.nativeElement;\n      wrapCreaciones.classList.remove('animate__bounceOutUp');\n      wrapCreaciones.classList.add('animate__bounceInDown');\n      this.objCat = objCat;\n      this.store.select('login').pipe(first()).subscribe(worker => __awaiter(this, void 0, void 0, function* () {\n        if (objCat.tipo === 'crear') {\n          fondo.style.display = 'flex';\n          this.tituloBotonHeader = 'Creación Cliente';\n          this.forma.reset();\n          this.cargarSelects(worker.token);\n          this.detectarRole();\n          this.crear = true;\n        } else if (objCat.tipo === 'editar') {\n          fondo.style.display = 'flex';\n          this.tituloBotonHeader = 'Editar/Ver Cliente';\n          this.crear = false;\n          this.cargarDatosUsuarios(objCat.idCat, worker.token);\n          const usuario = yield this.userService.obtenerClienteID(objCat.idCat, worker.token).toPromise();\n          this.roleUsuario = this.forma.controls.role.value;\n          this.roleInputs(usuario.usuarioDB.client_role);\n        } else if (objCat.tipo === 'eliminar') {\n          this.fondo.nativeElement.style.display = 'none';\n          Swal.fire({\n            title: 'Mensaje',\n            text: '¿Desea eliminar este cliente?',\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Eliminar',\n            cancelButtonText: 'Cancelar'\n          }).then(result => {\n            if (result.isConfirmed) {\n              this.userService.eliminarClienteID(objCat.idCat, worker.token).subscribe(usuario => {\n                this.store.dispatch(loadingActions.cargarLoading());\n\n                if (usuario.ok === true) {\n                  this.store.dispatch(loadingActions.quitarLoading());\n                  this.obtenerUsuarios();\n\n                  if (result.isConfirmed) {\n                    Swal.fire('Mensaje', `${usuario.mensaje}`, 'success');\n                  }\n                } else {\n                  this.store.dispatch(loadingActions.quitarLoading());\n                  Swal.fire('Mensaje', `${usuario.mensaje}`, 'info');\n                }\n              });\n            }\n          });\n        }\n      }));\n    }\n\n    get checkNombre() {\n      if (this.forma.controls.nombre.touched && this.forma.controls.nombre.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkApellido() {\n      if (this.forma.controls.apellido.touched && this.forma.controls.apellido.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkTelefono() {\n      if (this.forma.controls.telefono.touched && this.forma.controls.telefono.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkIdentificacion() {\n      if (this.forma.controls.identificacion.touched && this.forma.controls.identificacion.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkRuc() {\n      if (this.forma.controls.ruc.touched && this.forma.controls.ruc.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkCorreo() {\n      if (this.forma.controls.correo.touched && this.forma.controls.correo.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkRole() {\n      if (this.forma.controls.role.touched && this.forma.controls.role.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    get checkSucursal() {\n      if (this.forma.controls.sucursal.touched && this.forma.controls.sucursal.status === 'INVALID') {\n        return true;\n      }\n    }\n\n    crearFormulario() {\n      this.forma = this.fb.group({\n        nombre: [null, [Validators.required]],\n        apellido: [null, [Validators.required]],\n        role: [null, [Validators.required]],\n        sucursal: [null, [Validators.required]],\n        telefono: [null, [Validators.required]],\n        identificacion: [null, [Validators.required]],\n        ruc: [null, [Validators.required]],\n        correo: [null, [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,3}$')]],\n        observacion: [null],\n        estado: [true]\n      });\n    }\n\n    cerrarCreacion(e) {\n      const fondo = this.fondo.nativeElement;\n      const wrapCreaciones = this.wrapCreaciones.nativeElement;\n      wrapCreaciones.classList.remove('animate__bounceInDown');\n      wrapCreaciones.classList.add('animate__bounceOutUp');\n      setTimeout(() => {\n        fondo.style.display = 'none';\n      }, 800);\n    }\n\n    cargarDatosUsuarios(idUsuario, token) {\n      const usuario = this.userService.obtenerClienteID(idUsuario, token);\n      const sucursales = this.sucursalService.obtenerSucursales(token);\n      const roles = this.userService.obtenerClienteRoles(token);\n      forkJoin([usuario, sucursales, roles]).pipe(map(resp => {\n        const objResp = {\n          usuario: resp[0],\n          sucursales: resp[1],\n          roles: resp[2]\n        };\n        return objResp;\n      })).subscribe(data => {\n        // console.log(data);\n        this.roles = data.roles;\n        this.sucursales = data.sucursales;\n        this.usuario = data.usuario; // console.log(this.usuario.usuarioDB.sucursal);\n\n        this.forma.controls.nombre.setValue(this.usuario.usuarioDB.nombre);\n        this.forma.controls.apellido.setValue(this.usuario.usuarioDB.apellido);\n        this.forma.controls.identificacion.setValue(this.usuario.usuarioDB.identificacion);\n        this.forma.controls.ruc.setValue(this.usuario.usuarioDB.ruc);\n        this.forma.controls.telefono.setValue(this.usuario.usuarioDB.telefono);\n        this.forma.controls.correo.setValue(this.usuario.usuarioDB.correo);\n        this.forma.controls.role.setValue(this.usuario.usuarioDB.client_role);\n        this.forma.controls.sucursal.setValue(this.usuario.usuarioDB.sucursal._id); // obtener el nombre del populate\n\n        this.forma.controls.observacion.setValue(this.usuario.usuarioDB.observacion);\n        this.forma.controls.estado.setValue(this.usuario.usuarioDB.estado);\n      });\n    }\n\n    cargarSelects(token) {\n      this.forma.controls.role.setValue('ComunRole');\n      const sucursales = this.sucursalService.obtenerSucursales(token);\n      const roles = this.userService.obtenerClienteRoles(token);\n      forkJoin([sucursales, roles]).pipe(map(resp => {\n        const objResp = {\n          usuario: null,\n          sucursales: resp[0],\n          roles: resp[1]\n        };\n        return objResp;\n      })).subscribe(data => {\n        // console.log(data.sucursales);\n        this.roles = data.roles;\n        this.sucursales = data.sucursales;\n      });\n    }\n\n    detectarRole() {\n      this.roleUsuario = this.forma.controls.role.value;\n      this.roleInputs(this.roleUsuario);\n    }\n\n    roleInputs(role) {\n      if (role === 'ComunRole' || role === 'ComunVIPRole' || role === 'ComunFrecuenteRole') {\n        this.forma.controls.apellido.enable();\n        this.forma.controls.ruc.disable();\n        this.forma.controls.identificacion.enable();\n      }\n\n      if (role === 'EmpresaVIPRole' || role === 'EmpresaRole') {\n        this.forma.controls.apellido.disable();\n        this.forma.controls.ruc.enable();\n        this.forma.controls.identificacion.disable();\n      }\n    }\n\n    guardar() {\n      this.forma.markAllAsTouched();\n\n      if (this.forma.status === 'VALID') {\n        // cargar loading\n        this.store.dispatch(loadingActions.cargarLoading());\n        this.store.select('login').pipe(first()).subscribe(worker => {\n          const estadoSuc = this.forma.controls.estado.value;\n          let castEstado = '';\n\n          if (estadoSuc === true) {\n            castEstado = 'true';\n          } else if (estadoSuc === false) {\n            castEstado = 'false';\n          }\n\n          const data = {\n            nombre: this.forma.controls.nombre.value,\n            apellido: this.forma.controls.apellido.value,\n            identificacion: this.forma.controls.identificacion.value,\n            ruc: this.forma.controls.ruc.value,\n            telefono: this.forma.controls.telefono.value,\n            correo: this.forma.controls.correo.value,\n            client_role: this.forma.controls.role.value,\n            sucursal: this.forma.controls.sucursal.value,\n            observacion: this.forma.controls.observacion.value,\n            password: '12345678',\n            estado: castEstado,\n            //  falta observacion\n            token: worker.token\n          };\n\n          if (this.objCat.tipo === 'editar') {\n            // console.log(data.client_role);\n            this.userService.editarClienteID(this.objCat.idCat, worker.token, data).subscribe(usuario => {\n              // console.log(usuario);\n              if (usuario.ok === true) {\n                this.store.dispatch(loadingActions.quitarLoading());\n                this.obtenerUsuarios();\n                Swal.fire('Mensaje', `${usuario.mensaje}`, 'info');\n                this.fondo.nativeElement.style.display = 'none';\n                this.forma.reset();\n              } else {\n                this.store.dispatch(loadingActions.quitarLoading());\n                Swal.fire('Mensaje', `${usuario.mensaje}`, // verificar las opciones\n                'error');\n              }\n            });\n          } else if (this.objCat.tipo === 'crear') {\n            this.userService.crearCliente(data).subscribe(usuario => {\n              if (usuario.ok === true) {\n                this.store.dispatch(loadingActions.quitarLoading());\n                this.obtenerUsuarios();\n                Swal.fire('Mensaje', `${usuario.mensaje}`, 'info');\n                this.fondo.nativeElement.style.display = 'none';\n                this.forma.reset();\n              } else {\n                this.store.dispatch(loadingActions.quitarLoading());\n                Swal.fire('Mensaje', `${usuario.mensaje}`, // verificar opciones\n                'error');\n              }\n            });\n          } else {\n            return;\n          }\n        });\n      }\n    }\n\n  }\n\n  ClientesComponent.ɵfac = function ClientesComponent_Factory(t) {\n    return new (t || ClientesComponent)(i0.ɵɵdirectiveInject(i1.Store), i0.ɵɵdirectiveInject(i2.UserService), i0.ɵɵdirectiveInject(i3.SucursalService), i0.ɵɵdirectiveInject(i4.FormBuilder));\n  };\n\n  ClientesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ClientesComponent,\n    selectors: [[\"app-clientes\"]],\n    viewQuery: function ClientesComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fondo = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapCreaciones = _t.first);\n      }\n    },\n    decls: 63,\n    vars: 30,\n    consts: [[\"id\", \"fondo\"], [\"fondo\", \"\"], [\"id\", \"wrap-craeciones\", 1, \"animate__animated\"], [\"wrapCreaciones\", \"\"], [\"id\", \"wrap-head\"], [\"id\", \"head-titulo\"], [1, \"fas\", \"fa-user-plus\"], [1, \"fas\", \"fa-times\", 2, \"cursor\", \"pointer\", \"font-size\", \"20px\", 3, \"click\"], [\"cerrar\", \"\"], [\"id\", \"wrap-body\"], [3, \"formGroup\", \"ngSubmit\"], [\"id\", \"body\"], [1, \"ctrl-creacion\"], [1, \"col-sm-2\", \"col-form-label\"], [\"type\", \"text\", \"formControlName\", \"nombre\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"id\", \"apellido\", \"formControlName\", \"apellido\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"text\", \"id\", \"identificacion\", \"formControlName\", \"identificacion\", 1, \"form-control\", 3, \"ngClass\"], [\"identificacion\", \"\"], [\"type\", \"text\", \"id\", \"ruc\", \"formControlName\", \"ruc\", 1, \"form-control\", 3, \"ngClass\"], [\"ruc\", \"\"], [\"type\", \"number\", \"formControlName\", \"telefono\", 1, \"form-control\", 3, \"ngClass\"], [\"type\", \"email\", \"formControlName\", \"correo\", 1, \"form-control\", 3, \"ngClass\"], [\"formControlName\", \"sucursal\", 1, \"form-select\", 3, \"ngClass\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"role\", 1, \"form-select\", 3, \"ngClass\", \"change\"], [1, \"ctrl-creacion\", 2, \"grid-column\", \"1 / span 2\"], [\"for\", \"observacion\", 1, \"form-label\"], [\"formControlName\", \"observacion\", \"id\", \"observacion\", \"rows\", \"3\", 1, \"form-control\", 2, \"resize\", \"none\"], [\"class\", \"form-check form-switch\", \"style\", \"display: flex; flex-direction: row; justify-content: flex-start; align-items: flex-end; padding-left: 0;\", 4, \"ngIf\"], [\"id\", \"wrap-buttons-creacion\"], [\"type\", \"submit\"], [\"type\", \"button\", 3, \"click\"], [3, \"catalogo\", \"abrirAlertCat\"], [3, \"value\"], [1, \"form-check\", \"form-switch\", 2, \"display\", \"flex\", \"flex-direction\", \"row\", \"justify-content\", \"flex-start\", \"align-items\", \"flex-end\", \"padding-left\", \"0\"], [1, \"form-check-label\"], [\"type\", \"checkbox\", \"formControlName\", \"estado\", \"role\", \"switch\", \"id\", \"estado\", \"checked\", \"\", 1, \"form-check-input\", 2, \"margin-left\", \"30px\"]],\n    template: function ClientesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-busqueda\");\n        i0.ɵɵelementStart(1, \"div\", 0, 1);\n        i0.ɵɵelementStart(3, \"div\", 2, 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelement(7, \"i\", 6);\n        i0.ɵɵelementStart(8, \"span\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"i\", 7, 8);\n        i0.ɵɵlistener(\"click\", function ClientesComponent_Template_i_click_10_listener($event) {\n          return ctx.cerrarCreacion($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function ClientesComponent_Template_form_ngSubmit_13_listener() {\n          return ctx.guardar();\n        });\n        i0.ɵɵelementStart(14, \"div\", 11);\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"label\", 13);\n        i0.ɵɵtext(17, \"Nombre:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 12);\n        i0.ɵɵelementStart(20, \"label\", 13);\n        i0.ɵɵtext(21, \"Apellido:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"div\", 12);\n        i0.ɵɵelementStart(24, \"label\", 13);\n        i0.ɵɵtext(25, \"Cedula.:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 16, 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 12);\n        i0.ɵɵelementStart(29, \"label\", 13);\n        i0.ɵɵtext(30, \"RUC:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 18, 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 12);\n        i0.ɵɵelementStart(34, \"label\", 13);\n        i0.ɵɵtext(35, \"Tel\\u00E9fono:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 12);\n        i0.ɵɵelementStart(38, \"label\", 13);\n        i0.ɵɵtext(39, \"Correo:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 12);\n        i0.ɵɵelementStart(42, \"label\", 13);\n        i0.ɵɵtext(43, \"Sucursal:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"select\", 22);\n        i0.ɵɵtemplate(45, ClientesComponent_option_45_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(46, \"div\", 12);\n        i0.ɵɵelementStart(47, \"label\", 13);\n        i0.ɵɵtext(48, \"Role:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"select\", 24);\n        i0.ɵɵlistener(\"change\", function ClientesComponent_Template_select_change_49_listener() {\n          return ctx.detectarRole();\n        });\n        i0.ɵɵtemplate(50, ClientesComponent_option_50_Template, 2, 2, \"option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 25);\n        i0.ɵɵelementStart(52, \"label\", 26);\n        i0.ɵɵtext(53, \"Observaci\\u00F3n:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(54, \"textarea\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(55, ClientesComponent_div_55_Template, 4, 0, \"div\", 28);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 29);\n        i0.ɵɵelementStart(57, \"button\", 30);\n        i0.ɵɵtext(58, \"Guardar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"button\", 31);\n        i0.ɵɵlistener(\"click\", function ClientesComponent_Template_button_click_59_listener($event) {\n          return ctx.cerrarCreacion($event);\n        });\n        i0.ɵɵtext(60, \"Cancelar\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(61, \"app-tables-catalogos\", 32);\n        i0.ɵɵlistener(\"abrirAlertCat\", function ClientesComponent_Template_app_tables_catalogos_abrirAlertCat_61_listener($event) {\n          return ctx.abrirAlert($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(62, \"app-loading\");\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(ctx.tituloBotonHeader);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.forma);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(14, _c2, ctx.checkNombre));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c2, ctx.checkApellido));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c2, ctx.checkIdentificacion));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(20, _c2, ctx.checkRuc));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(22, _c2, ctx.checkTelefono));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c2, ctx.checkCorreo));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(26, _c2, ctx.checkSucursal));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.sucursales == null ? null : ctx.sucursales.sucursalesDB);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(28, _c2, ctx.checkRole));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.roles == null ? null : ctx.roles.rolesDB);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !ctx.crear);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"catalogo\", ctx.catalogo);\n      }\n    },\n    directives: [i5.BusquedaComponent, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i6.NgClass, i4.NumberValueAccessor, i4.SelectControlValueAccessor, i6.NgForOf, i6.NgIf, i7.TablesCatalogosComponent, i8.LoadingComponent, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i4.CheckboxControlValueAccessor],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Roboto&display=swap\\\";@import\\\"https://fonts.googleapis.com/css2?family=Nunito+Sans&display=swap\\\";html[_ngcontent-%COMP%], body[_ngcontent-%COMP%]{height:100%!important;background-color:#eff2f5!important;position:relative;overflow:auto}a[_ngcontent-%COMP%]{text-decoration:none}#fondo[_ngcontent-%COMP%]{position:fixed;width:100vw;height:100vh;display:flex;justify-content:center;align-items:center;font-family:\\\"Nunito Sans\\\",sans-serif;display:none;background-color:#e5e5e580;z-index:99;top:0;left:0}.borde-rojo[_ngcontent-%COMP%]{border:1px solid tomato}#wrap-craeciones[_ngcontent-%COMP%]{width:700px;min-height:530px;background-color:#fff;padding:25px;box-shadow:1px 1px 4px 1px #cfcfcf;position:relative}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-head[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;align-items:center}#wrap-craeciones[_ngcontent-%COMP%]   #head-titulo[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-family:\\\"Nunito Sans\\\",sans-serif;flex-direction:row;color:#006c60;text-shadow:1px 3px 3px #cecece;font-size:20px;font-weight:600}#wrap-craeciones[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;font-family:\\\"Nunito Sans\\\",sans-serif;flex-direction:row;outline:none;border:none;background-color:#00b19d;color:#e5e5e5;height:35px;padding:10px;border-radius:4px;box-shadow:1px 1px 3px 3px #cecece;transition:.3s all ease-in-out;font-size:14px}#wrap-craeciones[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#009f8d}#wrap-craeciones[_ngcontent-%COMP%]   i[_ngcontent-%COMP%]{margin-right:7px;text-shadow:1px 3px 3px #cecece}#wrap-craeciones[_ngcontent-%COMP%]   .fa-plus[_ngcontent-%COMP%]{text-shadow:1px 1px 3px #a0a0a0}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]{display:grid;grid-template-columns:48% 48%;grid-row-gap:15px;margin-top:50px;width:100%;justify-content:space-between}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]   .ctrl-creacion[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:row;justify-content:space-between;align-items:flex-start}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]   .ctrl-creacion[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{outline:none;box-shadow:none;border-radius:0;border-top:0;border-left:0;border-right:0}#wrap-craeciones[_ngcontent-%COMP%]   form[_ngcontent-%COMP%] > #body[_ngcontent-%COMP%]   .ctrl-creacion[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{width:80px;margin-right:15px}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-buttons-creacion[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]{width:140px;box-shadow:none;border:1px solid #cccccc}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-buttons-creacion[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-child{background-color:#fff;color:#00b19d}#wrap-craeciones[_ngcontent-%COMP%]   #wrap-buttons-creacion[_ngcontent-%COMP%] > button[_ngcontent-%COMP%]:first-child:hover{color:#004b43;font-weight:400}#wrap-buttons-creacion[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;width:320px;position:absolute;right:25px;bottom:50px}\"]\n  });\n  return ClientesComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}